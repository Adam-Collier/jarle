(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{182:function(e,t,n){e.exports={description:n(183).default,displayName:"Provider",methods:[],name:"Provider",docblock:"The Provider supplies the context to the other components as well as handling\njsx transpilation and import resolution.",tags:[],props:[{name:"code",required:!0,tsType:{name:"string"},description:n(184).default,docblock:"A string of code to render",tags:[],type:{name:"string"}},{name:"scope",required:!1,tsType:{name:"TScope"},description:n(185).default,docblock:"A context object of values automatically available for use in editor code",tags:[],type:{name:"TScope"}},{name:"children",required:!1,tsType:{name:"ReactNode"},description:n(186).default,docblock:"Render subcomponents",tags:[],type:{name:"ReactNode"}},{name:"language",required:!1,tsType:{name:"string"},description:n(187).default,docblock:"A Prism language string for selecting a grammar for syntax highlighting",tags:[],type:{name:"string"}},{name:"theme",required:!1,tsType:{name:"PrismTheme"},description:n(188).default,docblock:"A Prism theme object, leave empty to not use a theme or use a traditional CSS theme.",tags:[],type:{name:"PrismTheme"}},{name:"showImports",required:!1,tsType:{name:"boolean"},description:n(189).default,defaultValue:{value:"true",computed:!1},docblock:"Whether the import statements in the initial `code` text are shown to the user or not.",tags:[],type:{name:"boolean"}},{name:"renderAsComponent",required:!1,tsType:{name:"boolean"},description:n(190).default,defaultValue:{value:"false",computed:!1},docblock:"Creates a react component using the code text as it's body. This allows\nusing top level hooks in your example without having to create and return your\nown component. Cannot be used with `render()` in the example.\n\n```jsx\nimport Button from './Button'\n\nconst [active, setActive] = useState()\n\n<Button active={active} onClick={() => setActive(true)}/>\n```",tags:[],type:{name:"boolean"}},{name:"resolveImports",required:!1,tsType:{name:"signature",type:"function",raw:"(\n  requests: string[]\n) => Promise<Record<string, any> | any[]>",signature:{arguments:[{name:"requests",type:{name:"Array",elements:[{name:"string"}],raw:"string[]"}}],return:{name:"Promise",elements:[{name:"union",raw:"Record<string, any> | any[]",elements:[{name:"Record",elements:[{name:"string"},{name:"any"}],raw:"Record<string, any>"},{name:"Array",elements:[{name:"any"}],raw:"any[]"}]}],raw:"Promise<Record<string, any> | any[]>"}}},description:n(191).default,defaultValue:{value:"function defaultResolveImports(sources) {\n  return Promise.all(sources.map((s) => import(/* webpackIgnore: true */ s)));\n}",computed:!1},docblock:"A function that maps an array of import requests to modules, may return a promise.\n\n```ts\nconst resolveImports = (requests) =>\n  Promise.all(requests.map(req => import(req)))\n```\n\nOr an object hash of import requests to the result\n\n```ts\nconst resolveImports = () => ({\n  './foo': Foo\n})\n```",tags:[],type:{name:"(\n  requests: string[]\n) => Promise<Record<string, any> | any[]>"}}]}},183:function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return i}));var o=n(3),r=n(7),a=n(79),s={};function i(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(a.b)("wrapper",Object(o.a)({},s,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("p",null,"The Provider supplies the context to the other components as well as handling\njsx transpilation and import resolution."))}i.isMDXComponent=!0},184:function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return i}));var o=n(3),r=n(7),a=n(79),s={};function i(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(a.b)("wrapper",Object(o.a)({},s,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("p",null,"A string of code to render"))}i.isMDXComponent=!0},185:function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return i}));var o=n(3),r=n(7),a=n(79),s={};function i(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(a.b)("wrapper",Object(o.a)({},s,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("p",null,"A context object of values automatically available for use in editor code"))}i.isMDXComponent=!0},186:function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return i}));var o=n(3),r=n(7),a=n(79),s={};function i(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(a.b)("wrapper",Object(o.a)({},s,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("p",null,"Render subcomponents"))}i.isMDXComponent=!0},187:function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return i}));var o=n(3),r=n(7),a=n(79),s={};function i(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(a.b)("wrapper",Object(o.a)({},s,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("p",null,"A Prism language string for selecting a grammar for syntax highlighting"))}i.isMDXComponent=!0},188:function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return i}));var o=n(3),r=n(7),a=n(79),s={};function i(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(a.b)("wrapper",Object(o.a)({},s,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("p",null,"A Prism theme object, leave empty to not use a theme or use a traditional CSS theme."))}i.isMDXComponent=!0},189:function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return i}));var o=n(3),r=n(7),a=n(79),s={};function i(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(a.b)("wrapper",Object(o.a)({},s,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("p",null,"Whether the import statements in the initial ",Object(a.b)("inlineCode",{parentName:"p"},"code")," text are shown to the user or not."))}i.isMDXComponent=!0},190:function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return i}));var o=n(3),r=n(7),a=n(79),s={};function i(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(a.b)("wrapper",Object(o.a)({},s,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("p",null,"Creates a react component using the code text as it's body. This allows\nusing top level hooks in your example without having to create and return your\nown component. Cannot be used with ",Object(a.b)("inlineCode",{parentName:"p"},"render()")," in the example."),Object(a.b)("pre",null,Object(a.b)("code",Object(o.a)({parentName:"pre"},{className:"language-jsx"}),"import Button from './Button'\n\nconst [active, setActive] = useState()\n\n<Button active={active} onClick={() => setActive(true)}/>\n")))}i.isMDXComponent=!0},191:function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return i}));var o=n(3),r=n(7),a=n(79),s={};function i(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(a.b)("wrapper",Object(o.a)({},s,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("p",null,"A function that maps an array of import requests to modules, may return a promise."),Object(a.b)("pre",null,Object(a.b)("code",Object(o.a)({parentName:"pre"},{className:"language-ts"}),"const resolveImports = (requests) =>\n  Promise.all(requests.map(req => import(req)))\n")),Object(a.b)("p",null,"Or an object hash of import requests to the result"),Object(a.b)("pre",null,Object(a.b)("code",Object(o.a)({parentName:"pre"},{className:"language-ts"}),"const resolveImports = () => ({\n  './foo': Foo\n})\n")))}i.isMDXComponent=!0},192:function(e,t,n){e.exports={description:n(193).default,displayName:"Editor",methods:[],name:"Editor",docblock:"The Editor is the code text editor component, some props can be supplied directly\nor take from the Provider context if available.",tags:[],props:[{name:"className",required:!1,tsType:{name:"string"},description:function(){return null},docblock:"",tags:[],type:{name:"string"}},{name:"style",required:!1,tsType:{name:"any"},description:function(){return null},docblock:"",tags:[],type:{name:"any"}},{name:"theme",required:!1,tsType:{name:"PrismTheme"},description:n(194).default,docblock:"A Prism theme object, can also be specified on the Provider",tags:[],type:{name:"PrismTheme"}},{name:"lineNumbers",required:!1,tsType:{name:"boolean"},description:n(195).default,docblock:"Render line numbers",tags:[],type:{name:"boolean"}},{name:"infoSrOnly",required:!1,tsType:{name:"boolean"},description:n(196).default,defaultValue:{value:"false",computed:!1},docblock:"Styles the info component so that it is not visible but still accessible by screen readers.",tags:[],type:{name:"boolean"}},{name:"infoComponent",required:!1,tsType:{name:"ReactComponentType",raw:"React.ComponentType<any>",elements:[{name:"any"}]},description:n(197).default,defaultValue:{value:"InfoMessage",computed:!0},docblock:"The component used to render A11y messages about keyboard navigation, override to customize the styling",tags:[],type:{name:"React.ComponentType<any>"}}]}},193:function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return i}));var o=n(3),r=n(7),a=n(79),s={};function i(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(a.b)("wrapper",Object(o.a)({},s,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("p",null,"The Editor is the code text editor component, some props can be supplied directly\nor take from the Provider context if available."))}i.isMDXComponent=!0},194:function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return i}));var o=n(3),r=n(7),a=n(79),s={};function i(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(a.b)("wrapper",Object(o.a)({},s,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("p",null,"A Prism theme object, can also be specified on the Provider"))}i.isMDXComponent=!0},195:function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return i}));var o=n(3),r=n(7),a=n(79),s={};function i(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(a.b)("wrapper",Object(o.a)({},s,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("p",null,"Render line numbers"))}i.isMDXComponent=!0},196:function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return i}));var o=n(3),r=n(7),a=n(79),s={};function i(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(a.b)("wrapper",Object(o.a)({},s,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("p",null,"Styles the info component so that it is not visible but still accessible by screen readers."))}i.isMDXComponent=!0},197:function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return i}));var o=n(3),r=n(7),a=n(79),s={};function i(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(a.b)("wrapper",Object(o.a)({},s,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("p",null,"The component used to render A11y messages about keyboard navigation, override to customize the styling"))}i.isMDXComponent=!0},198:function(e,t,n){e.exports={description:n(199).default,displayName:"Error",methods:[],name:"Error",docblock:"Displays an sytax or runtime error that occured when rendering the code",tags:[],props:[]}},199:function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return i}));var o=n(3),r=n(7),a=n(79),s={};function i(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(a.b)("wrapper",Object(o.a)({},s,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("p",null,"Displays an sytax or runtime error that occured when rendering the code"))}i.isMDXComponent=!0},200:function(e,t,n){e.exports={description:n(201).default,displayName:"Preview",methods:[],name:"Preview",docblock:"The component that renders the user's code.",tags:[],props:[{name:"className",required:!1,tsType:{name:"string"},description:function(){return null},docblock:"",tags:[],type:{name:"string"}},{name:"holderTheme",required:!1,tsType:{name:"any"},description:n(202).default,docblock:"An optional holder.js theme",tags:[],type:{name:"any"}}]}},201:function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return i}));var o=n(3),r=n(7),a=n(79),s={};function i(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(a.b)("wrapper",Object(o.a)({},s,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("p",null,"The component that renders the user's code."))}i.isMDXComponent=!0},202:function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return i}));var o=n(3),r=n(7),a=n(79),s={};function i(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(a.b)("wrapper",Object(o.a)({},s,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("p",null,"An optional holder.js theme"))}i.isMDXComponent=!0},77:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return x})),n.d(t,"metadata",(function(){return w})),n.d(t,"toc",(function(){return N})),n.d(t,"default",(function(){return T}));var o=n(3),r=n(7),a=n(0),s=n.n(a),i=n(79),c=n(182),l=n.n(c),p=n(192),u=n.n(p),d=n(198),m=n.n(d),b=n(200),h=n.n(b),j=n(203),f=n(127),y=n(73),g=n.n(y),O=Object(f.a)("h3");var v=function(e){var t=e.metadata,n=(t.name,Object(j.default)(t.props||[]));return s.a.createElement(s.a.Fragment,null,n.map((function(e){return s.a.createElement(s.a.Fragment,{key:e.name},s.a.createElement(O,{id:e.name},s.a.createElement("span",null,e.name),e.propData.required&&s.a.createElement("strong",{className:g.a.required},"required")),s.a.createElement(e.propData.description),s.a.createElement("div",null,s.a.createElement("div",null,s.a.createElement("strong",null,"type:")," ",s.a.createElement("span",null,e.type)),e.defaultValue&&s.a.createElement("div",{className:"mt-1"},s.a.createElement("strong",null,"default:"),s.a.createElement("code",null,e.defaultValue))))})))},x={id:"docs",title:"JARLE",slug:"/"},w={unversionedId:"docs",id:"docs",isDocsHomePage:!1,title:"JARLE",description:"Write code and see the result as you type.",source:"@site/docs/index.mdx",slug:"/",permalink:"/jarle/",version:"current"},N=[{value:"Overview",id:"overview",children:[]},{value:"Scope",id:"scope",children:[]},{value:"Importing modules in examples",id:"importing-modules-in-examples",children:[]},{value:"Usage",id:"usage",children:[{value:"Render into an iframe",id:"render-into-an-iframe",children:[]},{value:"Syntax Highlighting",id:"syntax-highlighting",children:[]},{value:"Line Numbers",id:"line-numbers",children:[]}]},{value:"Accessiblity",id:"accessiblity",children:[]},{value:"API",id:"api",children:[{value:"<code>&lt;Provider&gt;</code>",id:"provider",children:[]},{value:"<code>&lt;Editor&gt;</code>",id:"editor",children:[]},{value:"<code>&lt;Preview&gt;</code>",id:"preview",children:[]},{value:"<code>&lt;Error&gt;</code>",id:"error",children:[]}]}],C={toc:N};function T(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(i.b)("wrapper",Object(o.a)({},C,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("p",null,"Write code and see the result as you type."),Object(i.b)("h2",{id:"overview"},"Overview"),Object(i.b)("pre",null,Object(i.b)("code",Object(o.a)({parentName:"pre"},{className:"language-jsx",metastring:"live",live:!0}),"<h3>Hello World!</h3>\n")),Object(i.b)("p",null,"JARLE only looks at the last thing you return, so write whatever you need in front\nof it."),Object(i.b)("pre",null,Object(i.b)("code",Object(o.a)({parentName:"pre"},{className:"language-jsx",metastring:"live",live:!0}),'const DEFAULT = \'World\';\n\nfunction Greet({ subject = DEFAULT }) {\n  return <div>Hello {subject}</div>;\n}\n\nclass ClassyGreet extends React.Component {\n  render() {\n    const { subject } = this.props;\n    return <em>Hello {subject}</em>;\n  }\n}\n\n<>\n  <Greet />\n  <Greet subject="Planet" />\n  <ClassyGreet subject="Universe" />\n</>;\n')),Object(i.b)("p",null,"If the last expression is a valid React element type it'll render that as well:"),Object(i.b)("pre",null,Object(i.b)("code",Object(o.a)({parentName:"pre"},{className:"language-jsx",metastring:"live",live:!0}),"const DEFAULT = 'World';\n\nfunction Greet() {\n  return <div>Hello world</div>;\n}\n")),Object(i.b)("p",null,"Or with class components"),Object(i.b)("pre",null,Object(i.b)("code",Object(o.a)({parentName:"pre"},{className:"language-jsx",metastring:"live",live:!0}),"class ClassyGreet extends React.Component {\n  render() {\n    return <em>Hello world</em>;\n  }\n}\n")),Object(i.b)("p",null,"If you want to be explicit you can also ",Object(i.b)("inlineCode",{parentName:"p"},"export")," a value directly (only the default export is used)."),Object(i.b)("pre",null,Object(i.b)("code",Object(o.a)({parentName:"pre"},{className:"language-jsx",metastring:"live",live:!0}),"export default React.forwardRef(() => {\n  return <strong>I'm unique!</strong>;\n});\n")),Object(i.b)("p",null,"For punchy terse demostrations of component render logic, use ",Object(i.b)("inlineCode",{parentName:"p"},"renderAsComponent"),"\nto have JARLE use your code as the body of a React function component."),Object(i.b)("pre",null,Object(i.b)("code",Object(o.a)({parentName:"pre"},{className:"language-jsx",metastring:"live renderAsComponent",live:!0,renderAsComponent:!0}),"const [seconds, setSeconds] = useState(0);\n\nuseEffect(() => {\n  let interval = setInterval(() => {\n    setSeconds((prev) => prev + 1);\n  }, 1000);\n\n  return () => clearInterval(interval);\n}, []);\n\nreturn <div>Seconds past: {seconds}</div>;\n")),Object(i.b)("p",null,"If you do need more control over what get's rendered, or need to render asynchronously, a\n",Object(i.b)("inlineCode",{parentName:"p"},"render")," function is always in scope:"),Object(i.b)("pre",null,Object(i.b)("code",Object(o.a)({parentName:"pre"},{className:"language-jsx",metastring:"live",live:!0}),"setTimeout(() => {\n  render(<div>I'm late!</div>);\n}, 1000);\n")),Object(i.b)("h2",{id:"scope"},"Scope"),Object(i.b)("p",null,"You can control which values, clases, components, etc are provided automatically\nto the example code when it's run by adjusting the ",Object(i.b)("inlineCode",{parentName:"p"},"scope"),". The ",Object(i.b)("inlineCode",{parentName:"p"},"scope")," is an object\nmap of identifiers and their values. The ",Object(i.b)("inlineCode",{parentName:"p"},"React")," namespace is provided as well as\nall of the built-in hooks (useState, useRef, etc) automatically along with a ",Object(i.b)("inlineCode",{parentName:"p"},"render()"),"\nfunction for finely tuning the returned element."),Object(i.b)("p",null,"You can also add our own values:"),Object(i.b)("pre",null,Object(i.b)("code",Object(o.a)({parentName:"pre"},{className:"language-jsx"}),"import lodash from 'lodash';\n\n<Provider scope={{ _: lodash }} />;\n")),Object(i.b)("h2",{id:"importing-modules-in-examples"},"Importing modules in examples"),Object(i.b)("p",null,"Import can be used in code blocks (as long as the browser supports ",Object(i.b)("a",Object(o.a)({parentName:"p"},{href:"https://caniuse.com/es6-module-dynamic-import"}),"dynamic imports"),")."),Object(i.b)("pre",null,Object(i.b)("code",Object(o.a)({parentName:"pre"},{className:"language-jsx",metastring:"live",live:!0}),"import confetti from 'https://cdn.skypack.dev/canvas-confetti';\n\n<button onClick={() => confetti()}>Confetti</button>;\n")),Object(i.b)("p",null,"Import statements are extracted from the example code and the requests\nare passed to a function responsible for resolving them into modules."),Object(i.b)("p",null,"The default behavior uses ",Object(i.b)("inlineCode",{parentName:"p"},"import()"),", relying on the browsers module support.\nYou can however, customize the importer to suit your needs. The resolver\nmay return an object map of possible requests to their module, useful\nwhen you only want to expose a few local values to examples (see also ",Object(i.b)("inlineCode",{parentName:"p"},"scope"),")."),Object(i.b)("pre",null,Object(i.b)("code",Object(o.a)({parentName:"pre"},{className:"language-jsx"}),"<Provider\n  resolveImports={() => ({\n    lodash: lodash,\n    'my-component': { default: () => <strong>Hey</strong> },\n  })}\n/>\n")),Object(i.b)("p",null,"For dynamic resolution the resolve is also passed a list of requests to be mapped\nto their modules. Here is the default implementation"),Object(i.b)("pre",null,Object(i.b)("code",Object(o.a)({parentName:"pre"},{className:"language-jsx"}),"<Provider\n  resolveImports={(requests) =>\n    promise.all(requests.map((request) => import(request)))\n  }\n/>\n")),Object(i.b)("p",null,"You can also mix together some of your own static analysis and tooling to\nbuild really neat integrations where imports are resolved a head of time, using webpack\nor other bundlers."),Object(i.b)("h2",{id:"usage"},"Usage"),Object(i.b)("p",null,"A full example of how to use JARLE via another JARLE editor!"),Object(i.b)("pre",null,Object(i.b)("code",Object(o.a)({parentName:"pre"},{className:"language-jsx",metastring:"live inline=false",live:!0,inline:"false"}),"import theme from 'https://cdn.skypack.dev/prism-react-renderer/themes/oceanicNext';\n\nconst { Provider, Editor, Error, Preview } = Jarle;\n\nconst code = `\n  <strong>Here's an editor inside an editor</strong>\n`;\n\n<div>\n  <h4 align=\"center\">Yo Dawg I heard you liked editors</h4>\n\n  <Provider code={code} theme={theme} language=\"jsx\">\n    <Editor style={{ padding: 20 }} infoSrOnly />\n    <Preview style={{ padding: 20, textAlign: 'center' }} />\n    <Error />\n  </Provider>\n</div>;\n")),Object(i.b)("h3",{id:"render-into-an-iframe"},"Render into an iframe"),Object(i.b)("p",null,"Previews are all rendered into the same document as the editor so they share stuff\nlike global CSS. If want to sandbox the result from the parent document, render\nyour preview into an ",Object(i.b)("inlineCode",{parentName:"p"},"<iframe>"),' useing a "portal".'),Object(i.b)("pre",null,Object(i.b)("code",Object(o.a)({parentName:"pre"},{className:"language-jsx",metastring:"live inline=false showImports= false",live:!0,inline:"false",showImports:"",false:!0}),"import theme from 'https://cdn.skypack.dev/jarle/themes/oceanicNext';\n\nconst { Provider, Editor, Error, Preview } = Jarle;\n\nfunction IFrameEditor(props) {\n  const [contentRef, setContentRef] = useState(null);\n  const mountNode = contentRef && contentRef.contentWindow.document.body;\n\n  return (\n    <Provider {...props}>\n      <Editor style={{ padding: 20 }} infoSrOnly />\n\n      <iframe ref={setContentRef} style={{ width: '100%' }} />\n\n      {mountNode &&\n        ReactDOM.createPortal(\n          <Preview style={{ padding: 20, textAlign: 'center' }} />,\n          mountNode\n        )}\n      <Error />\n    </Provider>\n  );\n}\n\nconst code = `\n  <strong>Here's an editor inside an editor inside an iframe</strong>\n`;\n\n<IFrameEditor code={code} theme={theme} language=\"jsx\" />;\n")),Object(i.b)("h3",{id:"syntax-highlighting"},"Syntax Highlighting"),Object(i.b)("p",null,"Like React Live, JARLE uses Prism via ",Object(i.b)("a",Object(o.a)({parentName:"p"},{href:"https://github.com/FormidableLabs/prism-react-renderer"}),Object(i.b)("inlineCode",{parentName:"a"},"prism-react-renderer")),"\nfor syntax highlighting. To get up and running quickly JARLE also reexports\nall the packages themes from prism-react-renderer, under ",Object(i.b)("inlineCode",{parentName:"p"},"jarle/themes")," so you\ndon't have to explicitly add ",Object(i.b)("inlineCode",{parentName:"p"},"prism-react-renderer")," to your ",Object(i.b)("inlineCode",{parentName:"p"},"package.json"),"."),Object(i.b)("p",null,"To use a theme import and pass it to the ",Object(i.b)("inlineCode",{parentName:"p"},"Provider"),":"),Object(i.b)("pre",null,Object(i.b)("code",Object(o.a)({parentName:"pre"},{className:"language-jsx"}),"import theme from 'jarle/themes/oceanicNext';\n\n<Provider\n  theme={theme}\n  ...\n/>\n")),Object(i.b)("p",null,"You can also use normal Prism themes by leaving off the ",Object(i.b)("inlineCode",{parentName:"p"},"theme")," prop and adding the\nappropriate class and global CSS."),Object(i.b)("h3",{id:"line-numbers"},"Line Numbers"),Object(i.b)("p",null,"Add the ",Object(i.b)("inlineCode",{parentName:"p"},"lineNumbers")," prop to the ",Object(i.b)("inlineCode",{parentName:"p"},"Editor")," to show line numbers. They can\nbe styled with CSS targeting the ",Object(i.b)("inlineCode",{parentName:"p"},"line-number")," class or add a ",Object(i.b)("inlineCode",{parentName:"p"},"lineNumber")," key to your\nprism theme."),Object(i.b)("pre",null,Object(i.b)("code",Object(o.a)({parentName:"pre"},{className:"language-jsx",metastring:"live lineNumbers",live:!0,lineNumbers:!0}),"const DEFAULT = 'World';\n\nfunction Greet({ subject = DEFAULT }) {\n  return <div>Hello {subject}</div>;\n}\n\n<Greet />;\n")),Object(i.b)("h2",{id:"accessiblity"},"Accessiblity"),Object(i.b)("p",null,"Rich text editors like JARLE tend to break an important aspect of keyboard navigation\non the web. Namely they break ",Object(i.b)("kbd",null,"tab")," behavior by indenting instead of\nmoving focus to the next item on the page. This really helpful for text editing\nbut can trap keyboard users in the editor."),Object(i.b)("p",null,"To address this JARLE doesn't automatically trap focus when the user tabs into the editor.\nPressing ",Object(i.b)("kbd",null,"enter")," or typing printable characters activates the tap trap,\nso the hitting ",Object(i.b)("kbd",null,"tab")," indents instead of moving focus. Hitting ",Object(i.b)("kbd",null,"esc"),"\ndisables tab trapping allowing a user to tab away from the editor."),Object(i.b)("p",null,"This behavior is communicated to users via ",Object(i.b)("inlineCode",{parentName:"p"},"Info"),' text (which should also be\nread out to a Screen Reader). The visual message is enabled by default\nbecause not all keyboard users are screen reader users. If you want to make the\nmessages "screen ready only", pass ',Object(i.b)("inlineCode",{parentName:"p"},"infoSrOnly")," to the ",Object(i.b)("inlineCode",{parentName:"p"},"Editor"),"."),Object(i.b)("h2",{id:"api"},"API"),Object(i.b)("h3",{id:"provider"},Object(i.b)("inlineCode",{parentName:"h3"},"<Provider>")),Object(i.b)("p",null,s.a.createElement(l.a.description)),Object(i.b)(v,{metadata:l.a,mdxType:"PropsList"}),Object(i.b)("h3",{id:"editor"},Object(i.b)("inlineCode",{parentName:"h3"},"<Editor>")),Object(i.b)("p",null,s.a.createElement(u.a.description)),Object(i.b)(v,{metadata:u.a,mdxType:"PropsList"}),Object(i.b)("h3",{id:"preview"},Object(i.b)("inlineCode",{parentName:"h3"},"<Preview>")),Object(i.b)("p",null,s.a.createElement(h.a.description)),Object(i.b)(v,{metadata:h.a,mdxType:"PropsList"}),Object(i.b)("h3",{id:"error"},Object(i.b)("inlineCode",{parentName:"h3"},"<Error>")),Object(i.b)("p",null,s.a.createElement(m.a.description)),Object(i.b)(v,{metadata:m.a,mdxType:"PropsList"}))}T.isMDXComponent=!0}}]);